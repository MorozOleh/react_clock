{"version":3,"sources":["components/Clock/Clock.jsx","App.js","index.js"],"names":["Clock","state","timer","Date","this","timeID","setInterval","time","console","log","toLocaleTimeString","setState","prevProps","prev","props","clockName","current","clearInterval","Component","App","isClockVisible","show","hide","generateRandomNumber","digit","Math","round","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,OAASC,aAAY,WACxB,IAAMC,EAAO,IAAIJ,KAGjBK,QAAQC,IAAIF,EAAKG,sBACjB,EAAKC,SAAS,CAAET,MAAOK,MACtB,OAZP,gCAeE,SAAmBK,GAAY,IACVC,EAAST,KAAKU,MAAzBC,UACWC,EAAYJ,EAAvBG,UAEJX,KAAKU,MAAMC,YAAcH,EAAUG,WAErCP,QAAQC,IAAR,qCAA0CI,EAA1C,eAAqDG,MArB3D,kCAyBE,WACEC,cAAcb,KAAKC,UA1BvB,oBA6BE,WAAU,IACAH,EAAUE,KAAKH,MAAfC,MAER,OACE,mDAEqBA,EAAMQ,2BAnCjC,GAA2BQ,aCmDZC,G,kNAhDblB,MAAQ,CACNmB,gBAAgB,EAChBL,UAAW,G,EAGbM,KAAO,kBAAM,EAAKV,SAAS,CAAES,gBAAgB,K,EAE7CE,KAAO,kBAAM,EAAKX,SAAS,CAAES,gBAAgB,K,EAE7CG,qBAAuB,WACrB,IAAMC,EAAQC,KAAKC,MAAsB,IAAhBD,KAAKE,UAE9B,EAAKhB,SAAS,CAAEI,UAAWS,K,4CAG7B,WAAU,IACAH,EAAqCjB,KAArCiB,KAAMC,EAA+BlB,KAA/BkB,KAAMC,EAAyBnB,KAAzBmB,qBADb,EAE+BnB,KAAKH,MAAnCmB,EAFD,EAECA,eAAgBL,EAFjB,EAEiBA,UAExB,OACE,yBAAKa,UAAU,OACb,2CACCR,GACI,kBAAC,EAAD,CAAOL,UAAWA,IAEvB,4BACEc,KAAK,SACLC,QAAST,GAFX,cAMA,4BACEQ,KAAK,SACLC,QAASR,GAFX,cAMA,4BACEO,KAAK,SACLC,QAASP,GAFX,wB,GAtCUL,cCDlBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.ace16189.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nexport class Clock extends Component {\n  state = {\n    timer: new Date(),\n  }\n\n  componentDidMount() {\n    this.timeID = setInterval(() => {\n      const time = new Date();\n\n      // eslint-disable-next-line\n      console.log(time.toLocaleTimeString());\n      this.setState({ timer: time });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { clockName: prev } = this.props;\n    const { clockName: current } = prevProps;\n\n    if (this.props.clockName !== prevProps.clockName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prev} to ${current}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timeID);\n  }\n\n  render() {\n    const { timer } = this.state;\n\n    return (\n      <p>\n        {\n          `Current time: ${timer.toLocaleTimeString()}`\n        }\n      </p>\n    );\n  }\n}\n\nClock.propTypes = {\n  clockName: PropTypes.number.isRequired,\n};\n","import React, { Component } from 'react';\nimport { Clock } from './components/Clock';\n\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    isClockVisible: false,\n    clockName: 0,\n  }\n\n  show = () => this.setState({ isClockVisible: true })\n\n  hide = () => this.setState({ isClockVisible: false });\n\n  generateRandomNumber = () => {\n    const digit = Math.round(Math.random() * 100);\n\n    this.setState({ clockName: digit });\n  }\n\n  render() {\n    const { show, hide, generateRandomNumber } = this;\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {isClockVisible\n          && <Clock clockName={clockName} />\n        }\n        <button\n          type=\"button\"\n          onClick={show}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={hide}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={generateRandomNumber}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}