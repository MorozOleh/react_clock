{"version":3,"sources":["components/Clock/Clock.jsx","App.js","index.js"],"names":["Clock","prevProps","_","prev","this","props","clockName","current","console","log","initialValue","Component","App","state","isClockVisible","show","setState","hide","randomNumber","digit","Math","round","random","setInterval","humanResult","Date","toLocaleTimeString","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMA8BeA,E,wKArBb,SAAmBC,EAAWC,GAAI,IACbC,EAASC,KAAKC,MAAzBC,UACWC,EAAYN,EAAvBK,UAEJF,KAAKC,MAAMC,YAAcL,EAAUK,WAErCE,QAAQC,IAAR,qCAA0CN,EAA1C,eAAqDI,M,oBAIzD,WAAU,IACAG,EAAiBN,KAAKC,MAAtBK,aAER,OACE,mDACoBA,Q,GArBNC,aCoELC,G,kNAjEbC,MAAQ,CACNC,gBAAgB,EAChBJ,aAAc,cACdJ,UAAW,G,EAcbS,KAAO,kBAAM,EAAKC,SAAS,CAAEF,gBAAgB,K,EAE7CG,KAAO,kBAAM,EAAKD,SAAS,CAAEF,gBAAgB,K,EAE7CI,aAAe,WACb,IAAMC,EAAQC,KAAKC,MAAsB,IAAhBD,KAAKE,UAE9B,EAAKN,SAAS,CAAEV,UAAWa,K,uDAlB7B,WAAqB,IAAD,OAClBI,aAAY,WACV,IACMC,GADO,IAAIC,MACQC,qBAGzBlB,QAAQC,IAAIe,GACZ,EAAKR,SAAS,CAAEN,aAAcc,MAC7B,O,oBAaL,WAAU,IACAT,EAA6BX,KAA7BW,KAAME,EAAuBb,KAAvBa,KAAMC,EAAiBd,KAAjBc,aADb,EAE6Cd,KAAKS,MAAjDC,EAFD,EAECA,eAAgBJ,EAFjB,EAEiBA,aAAcJ,EAF/B,EAE+BA,UAEtC,OACE,yBAAKqB,UAAU,OACb,2CACCb,GAEG,kBAAC,EAAD,CACEJ,aAAcA,EACdJ,UAAWA,IAIjB,4BACEsB,KAAK,SACLC,QAASd,GAFX,cAMA,4BACEa,KAAK,SACLC,QAASZ,GAFX,cAMA,4BACEW,KAAK,SACLC,QAASX,GAFX,wB,GAvDUP,cCDlBmB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.5fdf4541.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nclass Clock extends Component {\n  static propTypes = {\n    clockName: PropTypes.number.isRequired,\n    initialValue: PropTypes.string.isRequired,\n  }\n\n  componentDidUpdate(prevProps, _) {\n    const { clockName: prev } = this.props;\n    const { clockName: current } = prevProps;\n\n    if (this.props.clockName !== prevProps.clockName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prev} to ${current}`);\n    }\n  }\n\n  render() {\n    const { initialValue } = this.props;\n\n    return (\n      <p>\n        {`Current time: ${initialValue}`}\n      </p>\n    );\n  }\n}\n\nexport default Clock;\n","import React, { Component } from 'react';\nimport Clock from './components/Clock';\n\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    isClockVisible: false,\n    initialValue: '00:00:00 AM',\n    clockName: 0,\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      const date = new Date();\n      const humanResult = date.toLocaleTimeString();\n\n      // eslint-disable-next-line\n      console.log(humanResult);\n      this.setState({ initialValue: humanResult });\n    }, 1000);\n  }\n\n  show = () => this.setState({ isClockVisible: true })\n\n  hide = () => this.setState({ isClockVisible: false })\n\n  randomNumber = () => {\n    const digit = Math.round(Math.random() * 100);\n\n    this.setState({ clockName: digit });\n  }\n\n  render() {\n    const { show, hide, randomNumber } = this;\n    const { isClockVisible, initialValue, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {isClockVisible\n          && (\n            <Clock\n              initialValue={initialValue}\n              clockName={clockName}\n            />\n          )\n        }\n        <button\n          type=\"button\"\n          onClick={show}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={hide}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={randomNumber}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}